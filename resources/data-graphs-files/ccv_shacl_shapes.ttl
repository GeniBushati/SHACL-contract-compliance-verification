@prefix base: <http://ontologies.atb-bremen.de/smashHitCore#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix fibo-fbc-fe-fse: <https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/FinancialServicesEntities/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix dpv-gdpr: <http://www.w3.org/ns/dpv-gdpr#> .
@prefix fibo-fnd-agr-ctr: <https://spec.edmcouncil.org/fibo/ontology/FND/Agreements/Contracts/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix gconsent: <https://w3id.org/GConsent#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix rdf4j: <http://rdf4j.org/schema/rdf4j#> .
@prefix fibo-der-dc-dma: <https://spec.edmcouncil.org/fibo/ontology/DER/DerivativesContracts/DerivativesMasterAgreements/> .
@prefix fibo-fnd-trext-reatr: <https://spec.edmcouncil.org/fibo/ontology/FND/TransactionsExt/REATransactions/> .
@prefix gn: <http://www.geonames.org/ontology#> .
@prefix dpv: <http://www.w3.org/ns/dpv#> .
@prefix consent: <http://purl.org/adaptcentre/openscience/ontologies/consent#> .
@prefix fibo-loan-loant-mloan: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanTypes/MortgageLoans/> .
@prefix LCC: <https://www.omg.org/spec/LCC/Countries/CountryRepresentation/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix fibo-fnd-plc-loc: <https://spec.edmcouncil.org/fibo/ontology/FND/Places/Locations/> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix fibo-fbc-dae-dbt: <https://spec.edmcouncil.org/fibo/ontology/FBC/DebtAndEquities/Debt/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix ex: <http://example.com/ns#> .

schema:CCV1stScenarioShape a sh:NodeShape ;
 sh:targetClass base:CCV1st;
 sh:and (
         [a sh:NodeShape;
          sh:property [
                sh:path base:hasContractCategory;
                sh:in (base:categoryBusinessToBusiness)
                  ]
         ]
         [a sh:NodeShape;
          sh:property [
                sh:path base:hasConsentState;
                sh:in ("empty")
                  ]
          ]
          [a sh:NodeShape;
           sh:property [
                  sh:path base:hasContractStatus;
                  sh:in (base:statusCreated base:statusUpdated base:statusPending)
               ]
           ]
           [a sh:NodeShape;
           sh:property [
                  sh:path base:hasStates;
                  sh:hasValue base:statePending;
               ]
           ]
           [a sh:NodeShape;
            sh:property [

           sh:path base:currentDateTime ;
           sh:lessThanOrEquals base:hasEndDate ;
           sh:message "Violation occured. The end date already passed." ;





           ] ;


          ]
);
 .
schema:CCVSecondScenarioShape a sh:NodeShape ;
 sh:targetClass base:CCVSecond;
 sh:and (
         [a sh:NodeShape;
          sh:property [
                sh:path base:hasContractCategory;
                sh:minCount 2;
                sh:in (base:categoryBusinessToBusiness base:categoryBusinessToConsumer)
                ]
         ]
         [a sh:NodeShape;
          sh:property [
                sh:path base:hasConsentState;
                sh:in ("Valid" "Invalid" "Expired")
                  ]
          ]
          [a sh:NodeShape;
           sh:property [
                  sh:path base:hasContractStatus;
                  sh:in (base:statusCreated base:statusUpdated base:statusPending)
               ]
           ]
           [a sh:NodeShape;
           sh:property [
                  sh:path  base:hasConsentState;
                  sh:not [
            sh:in (  "Invalid" "Expired" );
            sh:message "Consent is invalid but the contract is still running";
                    ]
               ]
           ]
);
.

schema:CCVthirdScenarioIfPartShape a sh:NodeShape ;
 sh:targetClass base:CCVThirdIf;
 sh:and (
         [a sh:NodeShape;
          sh:property [
                sh:path base:hasContractCategory;
                sh:in (base:categoryBusinessToConsumer)
                  ]
         ]
         [a sh:NodeShape;
          sh:property [
                sh:path base:hasConsentState;
                sh:in ("Valid" "Invalid" "Expired")
                  ]
          ]
          [a sh:NodeShape;
           sh:property [
                  sh:path base:hasContractStatus;
                  sh:in (base:statusCreated base:statusUpdated base:statusPending)
               ]
           ]
           [a sh:NodeShape;
           sh:property [
                  sh:path  base:hasConsentState;
                  sh:not [
            sh:in (  "Invalid" "Expired" );
             sh:message "Consent is invalid but the contract is still running";
        ]
               ]
           ]
);
.

schema:CCVThirdScenarioElsePartShape a sh:NodeShape ;
 sh:targetClass base:CCVThirdElse;
 sh:and (
         [a sh:NodeShape;
          sh:property [
                sh:path base:hasContractCategory;
                sh:in (base:categoryBusinessToConsumer)
                  ]
         ]
         [a sh:NodeShape;
          sh:property [
                sh:path base:hasConsentState;
                sh:in ("Valid")
                  ]
          ]
          [a sh:NodeShape;
           sh:property [
                  sh:path base:hasContractStatus;
                  sh:in (base:statusCreated base:statusUpdated base:statusPending)
               ]
           ]
           [a sh:NodeShape;
           sh:property [
                  sh:path base:hasStates;
                  sh:hasValue base:statePending;
               ]
           ]
           [a sh:NodeShape;
            sh:property [

           sh:path base:currentDateTime ;
           sh:lessThanOrEquals base:hasEndDate ;
           sh:message "Violation occured. Contract end date has been surpassed";

           ] ;
           ]
);
 .

schema:CCVFourthScenarioShape a sh:NodeShape ;
 sh:targetClass base:CCVFourth;
 sh:and (
         [a sh:NodeShape;
          sh:property [
                sh:path base:hasContractCategory;
                sh:in (base:categoryBusinessToConsumer)
                  ]
         ]
         [a sh:NodeShape;
          sh:property [
                sh:path base:hasConsentState;
                sh:in ("empty")
                  ]
          ]
          [a sh:NodeShape;
           sh:property [
                  sh:path base:hasContractStatus;
                  sh:in (base:statusCreated base:statusUpdated base:statusPending)
               ]
           ]
           [a sh:NodeShape;
           sh:property [
                  sh:path base:hasStates;
                  sh:hasValue base:statePending;
               ]
           ]
           [a sh:NodeShape;
            sh:property [

           sh:path base:currentDateTime ;
           sh:lessThanOrEquals base:hasEndDate ;
           sh:message "Violation occured. The end date already passed." ;
           ] ;

          ]
);
 .